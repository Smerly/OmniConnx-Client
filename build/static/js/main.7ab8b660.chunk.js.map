{"version":3,"sources":["reduxcomps/actions/index.js","services/auth-service.js","static/images/register.png","components/Login/Login.js","components/Register/RegisterUser.js","components/Navbar/LoginModal.js","static/images/logo.png","components/Navbar/NavigationBar.js","components/Footer/Footer.js","static/images/logo1.png","static/images/landing1.png","static/images/mentor.png","static/images/financial.png","static/images/reviews.png","static/images/skills.png","components/Landing/Landing.js","static/images/usericon.png","services/auth-header.js","services/skill-service.js","components/Profile/UserProfile.js","services/postsService.js","static/images/mentor-post.png","static/images/financial-post.png","static/images/reviews-post.png","services/user-service.js","components/Posts/Posts.js","components/Skills/Skills.js","reduxcomps/reducers/loginReducer.js","reduxcomps/reducers/postReducer.js","reduxcomps/reducers/showReducer.js","reduxcomps/reducers/index.js","components/MakePost/MakePost.js","App.js","reportWebVitals.js","serviceWorker.js","index.js"],"names":["SUBMIT_POST","SET_USER","SET_SHOW","setUser","user","type","payload","setShow","show","API_URL","username","password","axios","post","then","response","data","accessToken","localStorage","setItem","JSON","stringify","store","dispatch","console","log","window","getItem","catch","error","removeItem","parse","Login","useSelector","state","logged","useDispatch","history","useHistory","useState","loginUsername","setLoginUsername","loginPassword","setLoginPassword","Nav","Link","className","onClick","Modal","onHide","backdrop","keyboard","Header","closeButton","Title","for","onChange","e","target","value","push","AuthService","login","RegisterUser","registerUsername","setRegisterUsername","registerPassword","setRegisterPassword","alt","src","Register1","authService","register","alert","LoginModal","NavigationBar","logout","logoutUser","Navbar","expand","variant","Container","Toggle","aria-controls","Collapse","id","Brand","href","Logo","width","height","currUser","currUserFun","Footer","Landing","Logo1","Landing1","class","xmlns","xmlnsXlink","viewBox","preserveAspectRatio","shape-rendering","d","xlinkHref","x","y","fill","Mentor","Financial","Reviews","Skills","authHeader","get","document","getElementById","UserProfile","profile","Usericon","to","title","content","skills","headers","status","postid","put","delete","userid","Posts","setData","useEffect","postsService","getPosts","posts","postData","usernamePromise","map","element","UserService","getUserID","author","elem","Promise","all","style","allSkills","i","length","deletePost","_id","skillsService","getSkills","skillName","loginReducer","action","postReducer","desc","image","tag1","tag2","tag3","showReducer","combineReducers","MakePost","files","setFiles","useDropzone","accept","onDrop","acceptedFiles","file","Object","assign","preview","URL","createObjectURL","getRootProps","getInputProps","name","checked","setChecked","titles","setTitle","descs","setDesc","tagsSt","skillsData","newCurrUser","showSkills","skill","newChecked","getSelection","outputSkills","entries","key","placeholder","tag","submitPost","USER_STATE","persistedState","serializedState","err","loadState","createStore","reducers","subscribe","saveState","getState","App","component","exact","path","Register","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.7ab8b660.chunk.js","sourcesContent":["export const SUBMIT_POST = 'SUBMIT_POST';\nexport const LOGIN_CHECK = 'LOGIN_CHECK';\nexport const USER_CHECK = 'USER_CHECK';\nexport const SET_USER = 'SET_USER';\nexport const SET_SHOW = 'SET_SHOW';\n\nexport const submitPost = (title, desc, image, tag1, tag2, tag3) => {\n\treturn {\n\t\ttype: SUBMIT_POST,\n\t\tpayload: {\n\t\t\ttitle,\n\t\t\tdesc,\n\t\t\timage,\n\t\t\ttag1,\n\t\t\ttag2,\n\t\t\ttag3,\n\t\t},\n\t};\n};\n\nexport const loginCheck = (user) => {\n\treturn {\n\t\ttype: LOGIN_CHECK,\n\t\tpayload: { user },\n\t};\n};\n\nexport const setUser = (user) => {\n\treturn {\n\t\ttype: SET_USER,\n\t\tpayload: { user },\n\t};\n};\n\nexport const setShow = (show) => {\n\treturn {\n\t\ttype: SET_SHOW,\n\t\tpayload: { show },\n\t};\n};\n","import axios from 'axios';\nimport { store } from '../../src/App';\nimport { setUser } from '../../src/reduxcomps/actions';\n\nconst API_URL = 'http://localhost:8080/user';\n\n// handles authentication for the user (login, logout, register) and also can get the currently authenticated user's info\n\nclass AuthService {\n\t// authenticates user and saves accessToken in localStorage\n\tlogin(username, password) {\n\t\taxios\n\t\t\t.post(API_URL + '/signin', {\n\t\t\t\tusername,\n\t\t\t\tpassword,\n\t\t\t})\n\t\t\t.then((response) => {\n\t\t\t\tif (response.data.accessToken) {\n\t\t\t\t\t// saves accesstoken to browser's local storage\n\t\t\t\t\tlocalStorage.setItem('user', JSON.stringify(response.data));\n\t\t\t\t\tstore.dispatch(setUser(JSON.stringify(response.data)));\n\t\t\t\t\tconsole.log(window.localStorage.getItem('user'));\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(function (error) {\n\t\t\t\tconsole.log(error);\n\t\t\t});\n\t}\n\n\t// logs currently authenticated user out\n\tlogout() {\n\t\tlocalStorage.removeItem('user');\n\t}\n\n\tregister(username, password) {\n\t\taxios\n\t\t\t.post(`${API_URL}/signup`, {\n\t\t\t\tusername,\n\t\t\t\tpassword,\n\t\t\t})\n\t\t\t.then(function (response) {\n\t\t\t\tconsole.log(response);\n\t\t\t})\n\t\t\t.catch(function (error) {\n\t\t\t\tconsole.log(error);\n\t\t\t});\n\t}\n\n\t// get current user's ID and accesstoken\n\tgetCurrentUser() {\n\t\treturn JSON.parse(localStorage.getItem('user'));\n\t}\n}\n\nexport default new AuthService();\n","export default __webpack_public_path__ + \"static/media/register.21ed9c01.png\";","import \"./Login.css\"\nimport React, { useState } from 'react';\nimport AuthService from '../../services/auth-service';\nimport { setShow } from '../../reduxcomps/actions';\n\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { loginCheck } from '../../reduxcomps/actions';\nimport { useSelector } from 'react-redux';\nimport { Modal, Button, Nav, Form } from 'react-bootstrap';\n\n// export default function Login() {\n// \tconst { user } = useSelector((state) => state.logged);\n// \tconst dispatch = useDispatch();\n// \t// helper variable for redirecting\n// \tconst history = useHistory();\n// \tconst [loginUsername, setLoginUsername] = useState('');\n// \tconst [loginPassword, setLoginPassword] = useState('');\n\n// \t// takes current values of inputted username and password and submits it to the backend through auth-services\n// \tconst loginUser = () => {\n// \t\tAuthService.login(loginUsername, loginPassword);\n// \t\t// console.log(`Username: ${loginUsername} \\nPassword: ${loginPassword}`);\n// \t};\n\n// \tconst handleRedirect = () => {\n// \t\thistory.push('/');\n// \t};\n\n// \treturn (\n// \t\t<div>\n\n// \t\t\t<h1> Login </h1>\n// \t\t\t<form onSubmit={handleRedirect}>\n// \t\t\t\t<label for=\"register_username\">Username: </label>\n// \t\t\t\t<br />\n// \t\t\t\t<input\n// \t\t\t\t\ttype=\"text\"\n// \t\t\t\t\tonChange={(e) => {\n// \t\t\t\t\t\tsetLoginUsername(e.target.value);\n// \t\t\t\t\t\tconsole.log(loginUsername);\n// \t\t\t\t\t}}\n// \t\t\t\t></input>\n// \t\t\t\t<br />\n// \t\t\t\t<label for=\"login_password\">Password: </label>\n// \t\t\t\t<br />\n// \t\t\t\t<input\n// \t\t\t\t\ttype=\"password\"\n// \t\t\t\t\tonChange={(e) => {\n// \t\t\t\t\t\tsetLoginPassword(e.target.value);\n// \t\t\t\t\t\tconsole.log(loginPassword);\n// \t\t\t\t\t}}\n// \t\t\t\t></input>\n// \t\t\t\t<br />\n// \t\t\t\t<button\n// \t\t\t\t\ttype=\"submit\"\n// \t\t\t\t\tonClick={() => {\n// \t\t\t\t\t\treturn loginUser();\n// \t\t\t\t\t}}\n// \t\t\t\t>\n// \t\t\t\t\tSubmit\n// \t\t\t\t</button>\n// \t\t\t</form>\n// \t\t</div>\n// \t);\n// }\n\nexport default function Login() {\n\tconst { user } = useSelector((state) => state.logged);\n\tconst { show } = useSelector((state) => state.show);\n\tconst dispatch = useDispatch();\n\t// helper variable for redirecting\n\tconst history = useHistory();\n\tconst [loginUsername, setLoginUsername] = useState('');\n\tconst [loginPassword, setLoginPassword] = useState('');\n\t// const [show, setShow] = useState(false);\n\t// const handleShow = () => setShow(true);\n\t// const handleClose = () => setShow(false);\n\n\t// takes current values of inputted username and password and submits it to the backend through auth-services\n\tconst loginUser = () => {\n\t\tAuthService.login(loginUsername, loginPassword);\n\t\t// console.log(`Username: ${loginUsername} \\nPassword: ${loginPassword}`);\n\t};\n\n\tconst handleRedirect = () => {\n\t\tdispatch(setShow(false));\n\t\thistory.push('/');\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Nav.Link className=\"nav-item\" onClick={() => dispatch(setShow(true))}>\n\t\t\t\tLogin\n\t\t\t</Nav.Link>\n\n\t\t\t<Modal\n\t\t\t\tshow={show}\n\t\t\t\tonHide={() => dispatch(setShow(false))}\n\t\t\t\tbackdrop=\"static\"\n\t\t\t\tkeyboard={false}\n\t\t\t>\n\t\t\t\t<Modal.Header closeButton>\n\t\t\t\t\t<Modal.Title>Login</Modal.Title>\n\t\t\t\t</Modal.Header>\n\n\t\t\t\t{/* HTML Code */}\n\t\t\t\t<div className=\"login\">\n\t\t\t\t\t<div className=\"hero\">\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<h1> Login </h1>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t{/* <form onSubmit={handleRedirect}> */}\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<label for=\"register_username\">Username: </label>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\tsetLoginUsername(e.target.value);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t></input>\n\t\t\t\t\t\t</ul>\n\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<label for=\"login_password\">Password: </label>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\tsetLoginPassword(e.target.value);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t></input>\n\t\t\t\t\t\t</ul>\n\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tclassName=\"button\"\n\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\thandleRedirect();\n\t\t\t\t\t\t\t\t\treturn loginUser();\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t{/* </form> */}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Modal>\n\t\t</>\n\t);\n}\n","import \"./RegisterUser.css\"\nimport Register1 from \"../../static/images/register.png\"\nimport React, { Component, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport Login from '../Login/Login';\nimport { setShow } from '../../reduxcomps/actions';\n\nimport authService from '../../services/auth-service';\n\n// page for registering a user account\n// class RegisterUser extends React.Component {\n//   constructor(props) {\n//     super(props);\n\n//     // create react references to username and password input elements\n//     this.registerUsername = React.createRef();\n//     this.registerPassword = React.createRef();\n\n//     // declare function to register user on submit\n//     this.registerUser = this.registerUser.bind(this);\n//   }\n\n//   // takes current values of inputted username and password and submits it to the backend through auth-services\n//   registerUser() {\n//     const username = this.registerUsername.current.value;\n//     const password = this.registerPassword.current.value;\n//     authService.register(username, password)\n//     console.log(`Username: ${username} \\nPassword: ${password}`)\n//   }\n\n//   render(){\n//     return (\n//       <div>\n//         <h1>Registration</h1>\n//         <form>\n//           <label for=\"register_username\">Username: </label><br />\n//           <input type=\"text\" ref={this.registerUsername} ></input><br />\n//           <label for=\"register_password\">Password: </label><br />\n//           <input type=\"password\" ref={this.registerPassword} ></input><br />\n//           <input type=\"button\" value=\"Submit\" onClick={this.registerUser}></input>\n//         </form>\n//       </div>\n//     )\n//   }\n// }\n\nfunction RegisterUser() {\n\tconst history = useHistory();\n\tconst dispatch = useDispatch();\n\t// Form useState variables\n\tconst [registerUsername, setRegisterUsername] = useState('');\n\tconst [registerPassword, setRegisterPassword] = useState('');\n\n\tconsole.log(registerPassword);\n\n\t// takes current values of inputted username and password and submits it to the backend through auth-services\n\tconst registerUser = () => {\n\t\tconst username = registerUsername;\n\t\tconst password = registerPassword;\n\t\tauthService.register(username, password);\n\t\thistory.push('/');\n\t\twindow.alert(`${username} has been registered.`);\n\t\tdispatch(setShow(true));\n\t};\n\n\treturn (\n\t\t<div className=\"register\">\n\t\t\t<div className=\"hero\">\n\t\t\t\t<img className=\"register1\" alt=\"register1\" src={Register1} />\n\t\t\t\t<div>\n\t\t\t\t\t<h1>Registration</h1>\n\t\t\t\t\t<form>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<label for=\"register_username\">Username: </label>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\tsetRegisterUsername(e.target.value);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t></input>\n\t\t\t\t\t\t</ul>\t\n\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<label for=\"register_password\">Password: </label>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\tsetRegisterPassword(e.target.value);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t></input>\n\t\t\t\t\t\t</ul>\n\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<input className=\"button\" type=\"button\" value=\"Submit\" onClick={registerUser}></input>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default RegisterUser;\n","import { loginSubmit } from '../../reduxcomps/actions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport AuthService from '../../services/auth-service';\nimport React, { useState } from 'react';\nimport { Modal, Button, Nav, Form } from 'react-bootstrap';\nimport {\n\tHashRouter as Router,\n\tRoute,\n\tSwitch,\n\tLink,\n\tuseHistory,\n} from 'react-router-dom';\nimport RegisterUser from '../Register/RegisterUser';\n\nfunction LoginModal() {\n\tconst { user } = useSelector((state) => state.logged);\n\tconst dispatch = useDispatch();\n\t// redirecting variables\n\tconst history = useHistory();\n\tconst [loginUsername, setLoginUsername] = useState('');\n\tconst [loginPassword, setLoginPassword] = useState('');\n\n\tconst [show, setShow] = useState(false);\n\tconst handleShow = () => setShow(true);\n\tconst handleClose = () => setShow(false);\n\n\t// takes current values of inputted username and password and submits it to the backend through auth-services\n\tconst loginUser = () => {\n\t\tAuthService.login(loginUsername, loginPassword);\n\t\t// console.log(`Username: ${loginUsername} \\nPassword: ${loginPassword}`);\n\t};\n\n\tconst handleRedirect = () => {\n\t\thistory.push('/');\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Nav.Link className=\"nav-item\" onClick={handleShow}>\n\t\t\t\tLogin\n\t\t\t</Nav.Link>\n\n\t\t\t<Modal\n\t\t\t\tshow={show}\n\t\t\t\tonHide={handleClose}\n\t\t\t\tbackdrop=\"static\"\n\t\t\t\tkeyboard={false}\n\t\t\t>\n\t\t\t\t<Modal.Header closeButton>\n\t\t\t\t\t<Modal.Title>Log In</Modal.Title>\n\t\t\t\t</Modal.Header>\n\n\t\t\t\t{/* HTML Code */}\n\t\t\t\t<div>\n\t\t\t\t\t<h1> Login </h1>\n\t\t\t\t\t<form onSubmit={handleRedirect}>\n\t\t\t\t\t\t<label for=\"register_username\">Username: </label>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\tsetLoginUsername(e.target.value);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t></input>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<label for=\"login_password\">Password: </label>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\tsetLoginPassword(e.target.value);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t></input>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\treturn loginUser();\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t</Modal>\n\t\t</>\n\t);\n}\n\nexport default LoginModal;\n\n// export default LoginModal\n\n// function LoginModal() {\n// \tconst [show, setShow] = useState(false);\n\n// \tconst handleShow = () => setShow(true);\n// \tconst handleClose = () => setShow(false);\n\n// \t// useState + Redux\n\n// \tconst dispatch = useDispatch();\n// \tconst [emailS, setEmail] = useState('');\n// \tconst [passwordS, setPassword] = useState('');\n// \tfunction handleSubmit(event) {\n// \t\tevent.preventDefault();\n// \t}\n\n// \treturn (\n// \t\t<>\n// \t\t\t<Nav.Link className=\"nav-item\" onClick={handleShow}>Login</Nav.Link>\n\n// \t\t\t<Modal\n// \t\t\t\tshow={show}\n// \t\t\t\tonHide={handleClose}\n// \t\t\t\tbackdrop=\"static\"\n// \t\t\t\tkeyboard={false}\n// \t\t\t>\n// \t\t\t\t<Modal.Header closeButton>\n// \t\t\t\t\t<Modal.Title>Log In</Modal.Title>\n// \t\t\t\t</Modal.Header>\n// \t\t\t\t<Form onSubmit={handleSubmit}>\n// \t\t\t\t\t<Modal.Body>\n// \t\t\t\t\t\t<Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n// \t\t\t\t\t\t\t<Form.Label>Email address</Form.Label>\n// \t\t\t\t\t\t\t<Form.Control\n// \t\t\t\t\t\t\t\ttype=\"email\"\n// \t\t\t\t\t\t\t\tplaceholder=\"Enter email\"\n// \t\t\t\t\t\t\t\tonChange={(e) => {\n// \t\t\t\t\t\t\t\t\tsetEmail(e.target.value);\n// \t\t\t\t\t\t\t\t}}\n// \t\t\t\t\t\t\t/>\n// \t\t\t\t\t\t\t<Form.Text className=\"text-muted\">\n// \t\t\t\t\t\t\t\tWe'll never share your email with anyone else.\n// \t\t\t\t\t\t\t</Form.Text>\n// \t\t\t\t\t\t</Form.Group>\n\n// \t\t\t\t\t\t<Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n// \t\t\t\t\t\t\t<Form.Label>Password</Form.Label>\n// \t\t\t\t\t\t\t<Form.Control\n// \t\t\t\t\t\t\t\ttype=\"password\"\n// \t\t\t\t\t\t\t\tplaceholder=\"Password\"\n// \t\t\t\t\t\t\t\tonChange={(e) => {\n// \t\t\t\t\t\t\t\t\tsetPassword(e.target.value);\n// \t\t\t\t\t\t\t\t}}\n// \t\t\t\t\t\t\t/>\n// \t\t\t\t\t\t</Form.Group>\n\n// \t\t\t\t\t\t<Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\n// \t\t\t\t\t\t\t<Form.Check type=\"checkbox\" label=\"remember me\" />\n// \t\t\t\t\t\t</Form.Group>\n// \t\t\t\t\t</Modal.Body>\n// \t\t\t\t\t<Modal.Footer>\n// \t\t\t\t\t\t<Button variant=\"secondary\" onClick={handleClose}>\n// \t\t\t\t\t\t\tClose\n// \t\t\t\t\t\t</Button>\n// \t\t\t\t\t\t<Button\n// \t\t\t\t\t\t\tvariant=\"primary\"\n// \t\t\t\t\t\t\ttype=\"submit\"\n// \t\t\t\t\t\t\tonClick={useDispatch(loginSubmit(emailS, passwordS))}\n// \t\t\t\t\t\t>\n// \t\t\t\t\t\t\tSubmit\n// \t\t\t\t\t\t</Button>\n// \t\t\t\t\t\t{/* <button type=\"submit\">Submit</button> */}\n// \t\t\t\t\t</Modal.Footer>\n// \t\t\t\t</Form>\n// \t\t\t</Modal>\n// \t\t</>\n// \t);\n// }\n","export default __webpack_public_path__ + \"static/media/logo.ac08c986.png\";","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Navbar, Container, Nav } from 'react-bootstrap';\nimport LoginModal from './LoginModal';\nimport './navbar.css';\nimport Logo from '../../static/images/logo.png';\nimport AuthService from '../../services/auth-service';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { loginCheck, setUser } from '../../reduxcomps/actions';\nimport Login from '../Login/Login';\n\nexport default function NavigationBar() {\n\tconst history = useHistory();\n\tconst dispatch = useDispatch();\n\tconst { user } = useSelector((state) => state.logged);\n\t// const [user2, setUser2] = useState(AuthService.getCurrentUser().accessToken);\n\tconst [user2, setUser2] = useState('');\n\t// console.log(currUserInfo)\n\n\tconst currUserFun = () => {\n\t\tif (user) {\n\t\t\tconst currUser = JSON.parse(window.localStorage.getItem('USER_STATE'));\n\t\t\tconst currUserInfo = JSON.parse(currUser.logged.user);\n\t\t\treturn currUserInfo;\n\t\t}\n\t};\n\n\tconst doLogoutUser = () => {\n\t\tAuthService.logout();\n\t};\n\tconst [logoutUser, setLogoutUser] = useState(doLogoutUser);\n\n\treturn (\n\t\t<Navbar expand=\"lg\" variant=\"light\" className=\"navbar\">\n\t\t\t<Container>\n\t\t\t\t<Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n\t\t\t\t<Navbar.Collapse id=\"basic-navbar-nav\">\n\t\t\t\t\t{/* Logo Section */}\n\t\t\t\t\t<Nav className=\"me-auto\">\n\t\t\t\t\t\t<Navbar.Brand href=\"/\">\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tsrc={Logo}\n\t\t\t\t\t\t\t\twidth=\"30\"\n\t\t\t\t\t\t\t\theight=\"30\"\n\t\t\t\t\t\t\t\tclassName=\"d-inline-block align-top\"\n\t\t\t\t\t\t\t\talt=\"OmniConnx Logo\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Navbar.Brand>\n\t\t\t\t\t</Nav>\n\n\t\t\t\t\t{/* Links Section */}\n\t\t\t\t\t<Nav>\n\t\t\t\t\t\t{user && \n\t\t\t\t\t\t\t\t<Nav.Link className=\"welcome\">\n\t\t\t\t\t\t\t\t\tWelcome Back {currUserFun().username} :)\n\t\t\t\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t<Nav.Link className=\"nav-item\" href=\"/posts\">\n\t\t\t\t\t\t\tPosts\n\t\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t\t{/* Conditional rendering of logged-in features */}\n\t\t\t\t\t\t{user && (\n\t\t\t\t\t\t\t<Nav.Link className=\"nav-item\" href=\"/skill\">\n\t\t\t\t\t\t\t\tSkills\n\t\t\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{user && (\n\t\t\t\t\t\t\t<Nav.Link className=\"nav-item\" href=\"/prof\">\n\t\t\t\t\t\t\t\tProfile\n\t\t\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{!user && <Login />}\n\t\t\t\t\t\t{!user && (\n\t\t\t\t\t\t\t<Nav.Link className=\"log\" href=\"/register\">\n\t\t\t\t\t\t\t\tRegister\n\t\t\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{/* {user && (\n\t\t\t\t\t\t\t<Nav.Link\n\t\t\t\t\t\t\t\tclassName=\"nav-item\"\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tdispatch(setUser(null));\n\t\t\t\t\t\t\t\t\thistory.push('/');\n\t\t\t\t\t\t\t\t\treturn logoutUser;\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tLogout\n\t\t\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t\t)} */}\n\n\t\t\t\t\t\t{user && (\n\t\t\t\t\t\t\t<Nav.Link\n\t\t\t\t\t\t\t\tclassName=\"log\"\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\twindow.alert(`Signed out`);\n\t\t\t\t\t\t\t\t\tdispatch(setUser(null));\n\t\t\t\t\t\t\t\t\thistory.push('/');\n\t\t\t\t\t\t\t\t\treturn logoutUser;\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tLogout\n\t\t\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{/* {!user && <LoginModal />} */}\n\t\t\t\t\t</Nav>\n\t\t\t\t</Navbar.Collapse>\n\t\t\t</Container>\n\t\t</Navbar>\n\t);\n}\n\n// ------\n\n// export default class NavigationBar extends Component {\n// \tconstructor(props) {\n// \t\tsuper(props);\n// \t\tthis.user = AuthService.getCurrentUser();\n// \t\tthis.logoutUser = this.logoutUser.bind(this);\n// \t\tthis.state = {\n// \t\t\tredirect: false,\n// \t\t\tlogged: this.user,\n// \t\t};\n// \t}\n\n// \tlogoutUser() {\n// \t\tAuthService.logout();\n// \t\t// this.setState({ redirect: true });\n// \t\t// const dispatch = useDispatch();\n// \t}\n\n// \t//function NavigationBar() {\n// \trender() {\n// \t\tif (this.state.redirect) {\n// \t\t\treturn <Redirect to=\"/\" />;\n// \t\t}\n// \t\treturn (\n// \t\t\t<Navbar expand=\"lg\" variant=\"light\" className=\"navbar\">\n// \t\t\t\t<Container>\n// \t\t\t\t\t<Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n// \t\t\t\t\t<Navbar.Collapse id=\"basic-navbar-nav\">\n// \t\t\t\t\t\t{/* Logo Section */}\n// \t\t\t\t\t\t<Nav className=\"me-auto\">\n// \t\t\t\t\t\t\t<Navbar.Brand href=\"/\">\n// \t\t\t\t\t\t\t\t<img\n// \t\t\t\t\t\t\t\t\tsrc={Logo}\n// \t\t\t\t\t\t\t\t\twidth=\"30\"\n// \t\t\t\t\t\t\t\t\theight=\"30\"\n// \t\t\t\t\t\t\t\t\tclassName=\"d-inline-block align-top\"\n// \t\t\t\t\t\t\t\t\talt=\"OmniConnx Logo\"\n// \t\t\t\t\t\t\t\t/>\n// \t\t\t\t\t\t\t</Navbar.Brand>\n// \t\t\t\t\t\t</Nav>\n\n// \t\t\t\t\t\t{/* Links Section */}\n// \t\t\t\t\t\t<Nav>\n// \t\t\t\t\t\t\t<Nav.Link className=\"nav-item\" href=\"/posts\">\n// \t\t\t\t\t\t\t\tPosts\n// \t\t\t\t\t\t\t</Nav.Link>\n// \t\t\t\t\t\t\t{/* Conditional rendering of logged-in features */}\n// \t\t\t\t\t\t\t{this.user && (\n// \t\t\t\t\t\t\t\t<Nav.Link className=\"nav-item\" href=\"/prof\">\n// \t\t\t\t\t\t\t\t\tProfile\n// \t\t\t\t\t\t\t\t</Nav.Link>\n// \t\t\t\t\t\t\t)}\n// \t\t\t\t\t\t\t{!this.user && (\n// \t\t\t\t\t\t\t\t<Nav.Link className=\"nav-item\" href=\"/register\">\n// \t\t\t\t\t\t\t\t\tRegister\n// \t\t\t\t\t\t\t\t</Nav.Link>\n// \t\t\t\t\t\t\t)}\n// \t\t\t\t\t\t\t{!this.user && (\n// \t\t\t\t\t\t\t\t<Nav.Link className=\"nav-item\" href=\"/login\">\n// \t\t\t\t\t\t\t\t\tLogin page\n// \t\t\t\t\t\t\t\t</Nav.Link>\n// \t\t\t\t\t\t\t)}\n// \t\t\t\t\t\t\t{this.user && (\n// \t\t\t\t\t\t\t\t<Nav.Link className=\"nav-item\" onClick={this.logoutUser}>\n// \t\t\t\t\t\t\t\t\tLogout\n// \t\t\t\t\t\t\t\t</Nav.Link>\n// \t\t\t\t\t\t\t)}\n\n// \t\t\t\t\t\t\t{!this.user && <LoginModal />}\n// \t\t\t\t\t\t</Nav>\n// \t\t\t\t\t</Navbar.Collapse>\n// \t\t\t\t</Container>\n// \t\t\t</Navbar>\n// \t\t);\n// \t}\n// \t//}\n// }\n","import React from \"react\"\nimport \"./Footer.css\"\n\nfunction Footer() {\n  return (\n    <div className=\"footer\">\n      <h2>Omniconnx</h2>\n    </div>\n  )\n}\n\nexport default Footer\n","export default __webpack_public_path__ + \"static/media/logo1.be188a87.png\";","export default __webpack_public_path__ + \"static/media/landing1.386878e2.png\";","export default __webpack_public_path__ + \"static/media/mentor.788f9af8.png\";","export default __webpack_public_path__ + \"static/media/financial.64dc1be7.png\";","export default __webpack_public_path__ + \"static/media/reviews.d2e76b70.png\";","export default __webpack_public_path__ + \"static/media/skills.a48c239f.png\";","import React from \"react\"\nimport \"./Landing.css\"\nimport Logo1 from \"../../static/images/logo1.png\"\nimport Landing1 from \"../../static/images/landing1.png\"\nimport Mentor from \"../../static/images/mentor.png\"\nimport Financial from \"../../static/images/financial.png\"\nimport Reviews from \"../../static/images/reviews.png\"\nimport Skills from \"../../static/images/skills.png\"\n\nfunction Landing() {\n  return (\n    <div className=\"landing\">\n      {/* Landing Page 1 */}\n      <div className=\"hero\">\n        <div>\n          <img className=\"logo1\" alt=\"logo1\" src={Logo1} />\n          <p>\n            Connecting medical <br /> professionals across the world\n          </p>\n          <button>Get Started</button>\n        </div>\n        <img className=\"landing1\" alt=\"landing1\" src={Landing1} />\n      </div>\n\n      {/* Wave effects */}\n      <div>\n        <svg\n          class=\"waves\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n          viewBox=\"0 24 150 28\"\n          preserveAspectRatio=\"none\"\n          shape-rendering=\"auto\"\n        >\n          <defs>\n            <path\n              id=\"gentle-wave\"\n              d=\"M-160 44c30 0 58-18 88-18s 58 18 88 18 58-18 88-18 58 18 88 18 v44h-352z\"\n            />\n          </defs>\n          <g class=\"parallax\">\n            <use xlinkHref=\"#gentle-wave\" x=\"48\" y=\"0\" fill=\"#3C5487\" />\n            <use xlinkHref=\"#gentle-wave\" x=\"48\" y=\"3\" fill=\"#76C9BF\" />\n            <use xlinkHref=\"#gentle-wave\" x=\"48\" y=\"5\" fill=\"#EAD2FF\" />\n            <use xlinkHref=\"#gentle-wave\" x=\"48\" y=\"8\" fill=\"#fff\" />\n          </g>\n        </svg>\n      </div>\n\n      {/* Landing Page 2 */}\n      <div className=\"hero2\">\n        <h1>MISSION</h1>\n        <p>\n          OmniConnx is established to form a global healthcare community <br /> through which\n          crowdsourced knowledge will support each other in three main areas:{\" \"}\n        </p>\n        <div className=\"blurbs\">\n          <div className=\"blurb\">\n            <img className=\"mentor\" src={Mentor} />\n            <h2>\n              Guided <br /> Mentorship\n            </h2>\n          </div>\n          <div className=\"blurb\">\n            <img className=\"financial\" src={Financial} />\n            <h2>\n              Financial <br />\n              Independence\n            </h2>\n          </div>\n          <div className=\"blurb\">\n            <img className=\"reviews\" src={Reviews} />\n            <h2>\n              Reliability of <br />\n              Reviews\n            </h2>\n          </div>\n        </div>\n        <button>Learn More</button>\n      </div>\n\n      {/* Landing Page 3 */}\n      <div className=\"hero\">\n        <img className=\"skills\" src={Skills} />\n        <div>\n          <h1>SKILLS</h1>\n          <h2> COMING SOON! </h2>\n          <p>\n            Through the use of Skills Update, you will be able to <br /> find and connect with\n            professionals who share your skills\n          </p>\n          <button>Other Features</button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Landing\n","export default __webpack_public_path__ + \"static/media/usericon.51d9af7d.png\";","export default function authHeader() {\n    const user = JSON.parse(localStorage.getItem('user'));\n  \n    if (user && user.accessToken) {\n      // for Node.js Express back-end\n      return { 'x-access-token': user.accessToken };\n    } else {\n      return {};\n    }\n  }","import axios from 'axios';\nimport authHeader from './auth-header';\n\nconst API_URL = 'http://localhost:8080/skill';\n\n// handles features for posts (submitting, updating, deleting, retrieving posts)\nclass skillsService {\n\tgetSkills() {\n\t\treturn axios.get(API_URL);\n\t}\n\t/*\n    updateUserSkill(skillName, users, skillid) {\n        axios.put(\"/update/\"+ skillid, {\n            skillName,\n            users\n        },\n        {\n            headers: {\n                'x-access-token': accessToken\n            }\n        })\n        .then(response => {\n            if (response.status == '200') {\n                console.log('Skill was successfully submitted')\n            }\n        })\n        .catch(error => {\n          console.log(error);\n        });\n    }\n*/\n}\n\nexport default new skillsService();\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { NavLink, Redirect } from 'react-router-dom';\nimport './userProfile.css';\nimport Usericon from '../../static/images/usericon.png';\nimport AuthService from '../../services/auth-service';\nimport skillsService from '../../services/skill-service';\nimport { useSelector } from 'react-redux';\n\n//do get all request\n\nvar select = document.getElementById('selectSkill');\nvar skillsArr = [];\n\n//const user = AuthService.getCurrentUser()\n//const [data, setData] = useState(null)\n/*\nuseEffect(() => {\n  getSkills().then(skills) =>\n    setData(skills.data)\n  })\n\n})\n\nconst skillsArr = data.map(e => {\n\n//for(var i = 0; i < skills.length; i++) {\n  var opt = e.skillName;\n  var el = document.createElement(\"option\");\n  el.textContent = opt;\n  el.value = opt;\n  select.appendChild(el);\n//}\n})\n\nfunction getSelection(){\n  const user = AuthService.getCurrentUser();\n\n  for(var i = 0; i < skillsArr.length; i++){\n    if (skillsArr[i] == select.value){\n      \n      updateUser(skillsArr[i].data.skill, user, skillsArr[i].data.id)\n      //Removes selected skill from list\n    }\n  }\n\n}\n*/\n\n/*\nvar select = document.getElementById(\"selectSkill\");\nvar skillsArr = [];\n\n//const user = AuthService.getCurrentUser()\n//const [data, setData] = useState(null)\nuseEffect(() => {\n  var skills = getSkills()\n\n  for(var i = 0; i < skills.length; i++) {\n    var opt = skills[i];\n    var el = document.createElement(\"option\");\n    el.textContent = opt;\n    el.value = opt;\n    select.appendChild(el);\n  }\n\n})\n\nfunction getSelection(){\n  const user = AuthService.getCurrentUser();\n\n  const profile = (\n      <div className='userProfile'>\n        <div className=\"prof\">\n          <h1>Profile</h1>\n        </div>\n        {/* Main User Area */\n// <div className=\"profmain\">\n//   <img className=\"usericon\" src={Usericon}/>\n//   {/* Profile Info */}\n//   <div className=\"profinfo\">\n//     <h5>{ user.username }</h5>\n//     <h5>Degree</h5>\n//     <h5>Gender</h5>\n//     <h5>Other</h5>\n//   </div>\n\n{\n\t/* Skills feature */\n}\n{\n\t/* <select id=\"selectSkill\">\n            <option>Select a Skill</option>\n        </select>\n        <button onClick=\"getSelection()\"> Add Skill </button>\n\n          <div className=\"skill\">\n            <div className=\"skillcard\">\n              <p>Skills Feature coming soon!</p>\n            </div>\n          </div> */\n}\n\nfunction UserProfile() {\n\tconst { user } = useSelector((state) => state.logged);\n\t// returns access token\n\tconst currUserFun = () => {\n\t\tif (user) {\n\t\t\tconst currUser = JSON.parse(window.localStorage.getItem('USER_STATE'));\n\t\t\tconst currUserInfo = JSON.parse(currUser.logged.user);\n\t\t\treturn currUserInfo.username;\n\t\t}\n\t};\n\tconst profile = (\n\t\t<div className=\"userProfile\">\n\t\t\t<div className=\"prof\">\n\t\t\t\t<h1>Profile</h1>\n\t\t\t</div>\n\t\t\t{/* Main User Area */}\n\t\t\t<div className=\"profmain\">\n\t\t\t\t<img className=\"usericon\" src={Usericon} />\n\t\t\t\t{/* Profile Info */}\n\t\t\t\t<div className=\"profinfo\">\n\t\t\t\t\t<h5>{currUserFun()}</h5>\n\t\t\t\t\t<h5>Degree</h5>\n\t\t\t\t\t<h5>Gender</h5>\n\t\t\t\t\t<h5>Other</h5>\n\t\t\t\t</div>\n\n\t\t\t\t{/* Skills feature */}\n\t\t\t\t{/* <select id=\"selectSkill\">\n\t\t\t\t\t<option>Select a Skill</option>\n\t\t\t\t</select> */}\n\t\t\t\t{/* <button onClick=\"getSelection()\"> Add Skill </button> */}\n\n\t\t\t\t<div className=\"skill\">\n\t\t\t\t\t<div className=\"skillcard\">\n\t\t\t\t\t\t<p>Skills Feature coming soon!</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"stat\">\n\t\t\t\t\t<div className=\"statcard\">\n\t\t\t\t\t\t<p>User statistics under development</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t{/* Bio Area */}\n\t\t\t<div className=\"bio\">\n\t\t\t\t<div className=\"biocard\">\n\t\t\t\t\t<p>Bio Area</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t{/* Posts Area */}\n\t\t\t<div className=\"userposts\">\n\t\t\t\t<div className=\"postinfo\">\n\t\t\t\t\t<div className=\"yourpost\">\n\t\t\t\t\t\t<h1>Your Posts</h1>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"newpost\">\n\t\t\t\t\t\t<button>\n\t\t\t\t\t\t\t<NavLink className=\"createPost\" to=\"/makepost\">\n\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\t+ Post\n\t\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"noposts\">\n\t\t\t\t\t<div className=\"nopostscard\">\n\t\t\t\t\t\t<p>Create your first post!</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t{/* DO NOT UNCOMMENT THIS */}\n\t\t\t\t{/* <div className=\"cards\">\n            <div className=\"card\">\n              <img src=\"https://via.placeholder.com/100\"></img>\n              <p>description</p>\n            </div>\n            <div className=\"card\">\n              <img src=\"https://via.placeholder.com/100\"></img>\n              <p>description</p>\n            </div>\n            <div className=\"card\">\n              <img src=\"https://via.placeholder.com/100\"></img>\n              <p>description</p>\n            </div>\n          </div> */}\n\t\t\t</div>\n\t\t</div>\n\t);\n\tconst error = (\n\t\t<div>\n\t\t\t<Redirect to=\"/\" />\n\t\t\tERROR: Must be logged in to view this page\n\t\t</div>\n\t);\n\n\t//Refactor this into state (convert this into a export class, refer to LoginModals.js)\n\treturn user ? profile : error;\n}\n\nexport default UserProfile;\n","import axios from 'axios';\nimport authHeader from './auth-header';\n\nconst API_URL = 'http://localhost:8080/post';\n\n// handles features for posts (submitting, updating, deleting, retrieving posts)\nclass postsService {\n\t// makes a POST req to backend to submit post into the database\n\t// takes in title and body of post as well as the author\n\tsubmitPost(title, content, skills, accessToken) {\n\t\taxios\n\t\t\t.post(\n\t\t\t\t`${API_URL}/create`,\n\t\t\t\t{\n\t\t\t\t\ttitle,\n\t\t\t\t\tcontent,\n\t\t\t\t\tskills,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t'x-access-token': accessToken,\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t)\n\t\t\t.then((response) => {\n\t\t\t\tif (response.status == '200') {\n\t\t\t\t\tconsole.log('Post was successfully submitted');\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(function (error) {\n\t\t\t\tconsole.log(error);\n\t\t\t});\n\t}\n\n\t//updates a specific post\n\tupdatePost(title, content, accessToken, postid, skills) {\n\t\taxios\n\t\t\t.put(\n\t\t\t\t'/update/' + postid,\n\t\t\t\t{\n\t\t\t\t\ttitle,\n\t\t\t\t\tcontent,\n\t\t\t\t\tskills,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t'x-access-token': accessToken,\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t)\n\t\t\t.then((response) => {\n\t\t\t\tif (response.status == '200') {\n\t\t\t\t\tconsole.log('Post was successfully updated');\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.log(error);\n\t\t\t});\n\t}\n\n\t//deletes a specific post\n\n\tdeletePost(postid, accessToken) {\n\t\taxios.delete(API_URL + '/delete/' + postid, {\n\t\t\theaders: {\n\t\t\t\t'x-access-token': accessToken,\n\t\t\t},\n\t\t\tdata: postid,\n\t\t});\n\t}\n\n\t//retrieve a number of latest posts, if origin is 0 then get the latest posts submitted to database\n\t// if !origin === 0 then pass a userID to get latests posts from a specific user\n\tgetPosts() {\n\t\treturn axios.get(API_URL);\n\t\t//.then(function(posts){\n\t\t//  console.log(posts)\n\t\t//}\n\t\t//);\n\t}\n\t//getPosts()\n}\n\nexport default new postsService();\n","export default __webpack_public_path__ + \"static/media/mentor-post.c8860ed3.png\";","export default __webpack_public_path__ + \"static/media/financial-post.1dbce9a8.png\";","export default __webpack_public_path__ + \"static/media/reviews-post.56aa2ccd.png\";","/*import http from \"../http-common\";\nimport axios from 'axios';\nimport authHeader from './auth-header';\n*/\nimport axios from 'axios';\nimport authHeader from './auth-header';\n\n//API URL \nconst API_URL = 'http://localhost:8080/';\n\nclass UserService {\n  getPublicContent() {\n    return axios.get(API_URL + 'all');\n  }\n\n  getUserBoard() {\n    return axios.get(API_URL + 'user', { headers: authHeader() });\n  }\n\n  getUserID(id) {\n    return axios.get(API_URL + 'user/'+ id)\n  }\n\n  updateUser(username, skills, accessToken, userid) {\n      axios.put(\"/update/\"+ userid, {\n          username,\n          skills\n      },\n      {\n          headers: {\n              'x-access-token': accessToken\n          }\n      })\n      .then(response => {\n          if (response.status == '200') {\n              console.log('Post was successfully submitted')\n          }\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n}\n\nexport default new UserService();\n\n/*\nclass UserDataService {\n  getAll() {\n    return http.get(\"/user\");\n  }\n\n  get(id) {\n    return http.get(`/user/${id}`);\n  }\n\n  create(data) {\n    return http.post(\"/user/signup\", data);\n  }\n\n  update(id, data) {\n    return http.put(`/user/${id}`, data);\n  }\n\n  delete(id) {\n    return http.delete(`/user/${id}`);\n  }\n\n  deleteAll() {\n    return http.delete(`/users`);\n  }\n\n  findByTitle(title) {\n    return http.get(`/users?title=${title}`);\n  }\n  \n}\n\nexport default new UserDataService();\n*/","import { React, useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport './Posts.css';\nimport Mentorpost from '../../static/images/mentor-post.png';\nimport Financialpost from '../../static/images/financial-post.png';\nimport Reviewspost from '../../static/images/reviews-post.png';\nimport AuthService from '../../services/auth-service';\nimport postsService from '../../services/postsService';\nimport UserService from '../../services/user-service';\n\nfunction Posts() {\n\tconst { user } = useSelector((state) => state.logged);\n\t// const curruser = JSON.parse(window.localStorage.getItem('USER_STATE'));\n\t// const newcurruser = JSON.parse(curruser.logged.user);\n\n\t// returns access token\n\tconst currUserFun = () => {\n\t\tif (user) {\n\t\t\tconst currUser = JSON.parse(window.localStorage.getItem('USER_STATE'));\n\t\t\tconst currUserInfo = JSON.parse(currUser.logged.user);\n\t\t\tconst accessToken = currUserInfo.accessToken;\n\t\t\treturn accessToken;\n\t\t}\n\t};\n\n\tconst [data, setData] = useState(null);\n\tuseEffect(() => {\n\t\tpostsService.getPosts().then((posts) => {\n\t\t\tvar postData = posts.data;\n\t\t\tconst usernamePromise = postData.map((element) => {\n\t\t\t\tconst username = UserService.getUserID(element.author);\n\n\t\t\t\treturn username.then((elem) => {\n\t\t\t\t\telement.username = elem.data.username;\n\t\t\t\t});\n\t\t\t});\n\t\t\tPromise.all(usernamePromise).then(() => setData(postData));\n\t\t});\n\t});\n\t// Gets post from database and returns parsed jsx elements\n\t//          <input type=\"button\" value=\"Submit\" onClick={deletePost(e._id)}></input>\n\n\tconst generatePosts = () => {\n\t\treturn data.map((e) => {\n\t\t\tvar allSkills = '';\n\t\t\tfor (let i = 0; i < e.skills.length; i++) {\n\t\t\t\tallSkills += e.skills[i] + ' ';\n\t\t\t}\n\n\t\t\treturn (\n\t\t\t\t<div className=\"cards\">\n\t\t\t\t\t<div className=\"card\">\n\t\t\t\t\t\t<div className=\"postName\">\n\t\t\t\t\t\t\t<p>{e.username}</p>\n\t\t\t\t\t\t\t<h4>{e.title}</h4>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t\t\t<div className=\"postBody\">\n\t\t\t\t\t\t\t<h5>Skill: {allSkills}</h5>\n\t\t\t\t\t\t\t<p>{e.content}</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName=\"button\"\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\tvalue=\"Delete\"\n\t\t\t\t\t\t\tonClick={() => postsService.deletePost(e._id, currUserFun())}\n\t\t\t\t\t\t></input>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t});\n\t};\n\n\n\treturn (\n\t\t<div className=\"posts\">\n\t\t\t<h1>POSTS</h1>\n\n\t\t\t{/* Create Post button | Accessed via log-in*/}\n\t\t\t{currUserFun() && (\n\t\t\t\t<button>\n\t\t\t\t\t<NavLink className=\"createPost\" to=\"/createPost\">\n\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t+ Post\n\t\t\t\t\t</NavLink>\n\t\t\t\t</button>\n\t\t\t)}\n\n\t\t\t{/* DisplaysPosts */}\n\t\t\t<div style={{}}>\n\t\t\t\t<div className=\"displayPosts\">{data ? generatePosts() : 'loading'}</div>\n\t\t\t</div>\n\t\t\t{/* PlaceholderPosts */}\n\t\t\t{/* <div className=\"blurbs\">\n\t\t\t\t<img className=\"mentorpost\" src={Mentorpost} alt=\"\" />\n\t\t\t\t<img className=\"financialpost\" src={Financialpost} alt=\"\" />\n\t\t\t\t<img className=\"reviewspost\" src={Reviewspost} alt=\"\" />\n\t\t\t</div> */}\n\t\t</div>\n\t);\n}\n\nexport default Posts;\n\n// !!!DO NOT UNCOMMENT THIS!!!\n// <button onClick={post({\n//     user:{session.user},\n//     tags:[tag1, tag2],\n//     title:'example name of a post number 2',\n//     image:'./place',\n//     description:'this is an example of what a description on our post number 2 will look like',\n// })}>\n//     post\n// </button>\n","import { React, useEffect, useState } from \"react\"\nimport { NavLink } from \"react-router-dom\"\nimport { useSelector } from 'react-redux';\n\nimport Mentorpost from '../../static/images/mentor-post.png'\nimport Financialpost from '../../static/images/financial-post.png'\nimport Reviewspost from '../../static/images/reviews-post.png'\nimport AuthService from \"../../services/auth-service\";\nimport skillsService from \"../../services/skill-service\"\nimport UserService from \"../../services/user-service\"\n\nfunction Skills() {\n\t//const { user } = useSelector((state) => state.logged);\n\n\tconst [data, setData] = useState(null);\n\tuseEffect(() => {\n        skillsService.getSkills().then(skills => {\n          setData(skills.data)\n          // console.log(posts.data)\n        })\n      })\n\t// Gets post from database and returns parsed jsx elements\n\t//          <input type=\"button\" value=\"Submit\" onClick={deletePost(e._id)}></input>\n\n\tconst generateSkills = () => {\n\t\treturn data.map((e) => {\n\n\t\t\treturn (\n\t\t\t\t<div className=\"blurbs\">\n\t\t\t\t\t<div className=\"postHead\">\n\t\t\t\t\t\t<h1>{e.skillName}</h1>\n                    </div>\n\t\t\t\t\n\t\t\t\t</div>\n\t\t\t);\n\t\t});\n\t};\n\n\treturn (\n\t\t<div className=\"skills\">\n\t\t\t<h1>SKILLS</h1>\n\n\t\t\t{/* Create Post button | Accessed via log-in*/}\n\t\t\t{/* DisplaysPosts */}\n\t\t\t<div className=\"displaySkills\">{data ? generateSkills() : 'loading'}</div>\n\n\t\t\t{/* PlaceholderPosts */}\n\t\t\n\t\t</div>\n\t);\n}\n\nexport default Skills;\n","import { SET_USER } from '../actions';\n\nfunction defaultState() {\n\treturn {\n\t\tuser: null,\n\t};\n}\n\nfunction loginReducer(state = defaultState(), action) {\n\tswitch (action.type) {\n\t\tcase SET_USER:\n\t\t\treturn { ...state, user: action.payload.user };\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport default loginReducer;\n","import { SUBMIT_POST } from '../actions';\n\nconst postReducer = (state = [], action) => {\n\tswitch (action.type) {\n\t\tcase SUBMIT_POST:\n\t\t\tconst { title, desc, image, tag1, tag2, tag3 } = action.payload;\n\t\t\treturn [...state, { title, desc, image, tag1, tag2, tag3 }];\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default postReducer;\n","import { SET_SHOW } from '../actions';\n\nfunction showReducer(state = { show: false }, action) {\n\tswitch (action.type) {\n\t\tcase SET_SHOW:\n\t\t\treturn { ...state, show: action.payload.show };\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport default showReducer;\n","import { combineReducers } from 'redux';\nimport loginReducer from './loginReducer';\nimport postReducer from './postReducer';\nimport showReducer from './showReducer';\n\nexport default combineReducers({\n\tposts: postReducer,\n\tlogged: loginReducer,\n\tshow: showReducer,\n});\n","import React, { useDropzone } from 'react-dropzone';\nimport { useState, useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport './MakePost.css';\nimport postsService from '../../services/postsService';\nimport authService from '../../services/auth-service';\nimport skillsService from '../../services/skill-service';\nimport { useSelector } from 'react-redux';\nfunction MakePost() {\n\tconst { user } = useSelector((state) => state.logged);\n\t// Redirect helper variable\n\tlet history = useHistory();\n\tconst [files, setFiles] = useState([]);\n\tconst { getRootProps, getInputProps } = useDropzone({\n\t\taccept: 'image/*',\n\t\tonDrop: (acceptedFiles) => {\n\t\t\tsetFiles(\n\t\t\t\tacceptedFiles.map((file) =>\n\t\t\t\t\tObject.assign(file, {\n\t\t\t\t\t\tpreview: URL.createObjectURL(file),\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t);\n\t\t},\n\t});\n\tconst images = files.map((file) => (\n\t\t<div key={file.name}>\n\t\t\t<div>\n\t\t\t\t<img\n\t\t\t\t\tsrc={file.preview}\n\t\t\t\t\tstyle={{ width: 200, height: 200 }}\n\t\t\t\t\talt=\"preview\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t));\n\n\t// For Redux useState variables\n\tconst [data, setData] = useState(null);\n\tconst [checked, setChecked] = useState({});\n\tconst [titles, setTitle] = useState('');\n\tconst [descs, setDesc] = useState('');\n\tconst [tagTemp, setTempTag] = useState('');\n\tconst [tagsSt, setTag] = useState([]);\n\n\tuseEffect(() => {\n\t\tskillsService.getSkills().then((skills) => {\n\t\t\tvar skillsData = skills.data;\n\t\t\tsetData(skillsData);\n\t\t});\n\t});\n\n\tconst currUser = JSON.parse(window.localStorage.getItem('USER_STATE'));\n\tconst newCurrUser = currUser.logged.user;\n\tconst parseNew = JSON.parse(newCurrUser); // do accessToken.accessToken to get this\n\tconst accessToken = parseNew.accessToken;\n\n\t// console.log(accessToken)\n\n\t// submitPost method\n\n\tconst submitPost = () => {\n\t\t// Auth service\n\n\t\thistory.push('/posts');\n\t\tconst skills = getSelection(checked);\n\t\t// postsService.submitPost(titles, descs, skills, accessToken.accessToken);\n\t\tpostsService.submitPost(titles, descs, skills, accessToken);\n\t};\n\n\tconst showSkills = () => {\n\t\treturn data.map((skill) => {\n\t\t\treturn (\n\t\t\t\t//setChecked(e => !e)}\n\t\t\t\t<div className=\"showskill\">\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\tid={skill.skillName}\n\t\t\t\t\t\tonChange={() => {\n\t\t\t\t\t\t\tvar newChecked = { ...checked };\n\t\t\t\t\t\t\tnewChecked[skill.skillName]\n\t\t\t\t\t\t\t\t? (newChecked[skill.skillName] = !newChecked[skill.skillName])\n\t\t\t\t\t\t\t\t: (newChecked[skill.skillName] = true);\n\n\t\t\t\t\t\t\tsetChecked(newChecked);\n\t\t\t\t\t\t}}\n\t\t\t\t\t></input>\n\t\t\t\t\t<label for={skill.skillName}> {skill.skillName} </label>\n\t\t\t\t</div>\n\t\t\t);\n\t\t});\n\t};\n\n\tconst getSelection = () => {\n\t\tvar outputSkills = [];\n\t\t//Get checkbox values of skills\n\t\tfor (const [key, value] of Object.entries(checked)) {\n\t\t\toutputSkills.push(key);\n\t\t\t//const refsArray  =  foo.map(eachId => ({id: eachId, ref: createRef()}));\n\t\t\t//if (element.checked){\n\t\t\t//    outputSkills.append(document.getElementById(skills[i].skillName).value)\n\n\t\t\t//}\n\t\t}\n\n\t\treturn outputSkills;\n\t};\n\n\treturn (\n\t\t<div className=\"main\">\n\t\t\t<form className=\"form\">\n\t\t\t\t<h1 className=\"title\">Create a post</h1>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tplaceholder=\"Title...\"\n\t\t\t\t\tclassName=\"titleInput\"\n\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\tsetTitle(e.target.value);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<textarea\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tclassName=\"text\"\n\t\t\t\t\tplaceholder=\"Post Content\"\n\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\tsetDesc(e.target.value);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\n\t\t\t\t<div className=\"skills\">\n\t\t\t\t\t<h3>Skills: </h3>\n\t\t\t\t\t\t{ data ? showSkills() : 'loading'}\n\t\t\t\t\t\t{tagsSt.map((tag) => {\n\t\t\t\t\t\t\treturn {tag};\n\t\t\t\t\t\t})}\n\t\t\t\t</div>\n\n\t\t\t\t{/* <div {...getRootProps()} className=\"img-input\">\n\t\t\t\t\t<input {...getInputProps()} />\n\t\t\t\t\t{files.length !== 0 ? (\n\t\t\t\t\t\timages\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<p>Drop files here or </p>\n\t\t\t\t\t\t\t<button className=\"button-hover\">Upload</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</div> */}\n\n\t\t\t\t{/* <div> */}\n\t\t\t\t\t{/* <div>\n\t\t\t\t\t\t<h3>Add a Tag </h3>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"tags\"\n\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\tif (tagTemp.length < 10) {\n\t\t\t\t\t\t\t\t\tsetTempTag(e.target.value);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tvalue={tagTemp}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName=\"addTagsButton\"\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tsetTag((tagsSt) => [...tagsSt, tagTemp]);\n\t\t\t\t\t\t\t\tsetTempTag('');\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tAdd\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div> */}\n\t\t\t\t\t{/* <div>\n\t\t\t\t\t\t<h3>Tags: </h3>\n\t\t\t\t\t\t<div className=\"disTag\">\n\t\t\t\t\t\t\t{tagsSt.map((tag) => {\n\t\t\t\t\t\t\t\treturn {tag};\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div> */}\n\t\t\t\t{/* </div> */}\n\t\t\t\t<div className=\"button-bottoms\">\n\t\t\t\t\t<button className=\"button-hover\" type=\"submit\">\n\t\t\t\t\t\tCancel\n\t\t\t\t\t</button>\n\t\t\t\t\t{/* <button className=\"button-hover\">\n\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\tstyle={{ textDecoration: 'none', color: 'white' }}\n\t\t\t\t\t\t\tvalue=\"Submit\"\n\t\t\t\t\t\t\tto={`/posts`}\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tsubmitPost();\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</button> */}\n\t\t\t\t\t{ data ? showSkills() : 'loading'}\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"button-hover\"\n\t\t\t\t\t\tvalue=\"Submit\"\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tsubmitPost();\n\t\t\t\t\t\t\twindow.alert('Your post was successfully created.');\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\tSubmit\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</div>\n\t);\n}\nexport default MakePost;\n","import './App.css';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\n//import { Switch, Route, Router } from \"react-router-dom\";\n\nimport NavigationBar from './components/Navbar/NavigationBar';\nimport Footer from './components/Footer/Footer';\nimport Landing from './components/Landing/Landing';\nimport UserProfile from './components/Profile/UserProfile';\nimport Posts from './components/Posts/Posts';\nimport createPost from './components/Posts/createPost';\nimport Register from './components/Register/RegisterUser';\nimport Login from './components/Login/Login';\nimport Skills from './components/Skills/Skills';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n// Redux\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport reducers from './reduxcomps/reducers';\nimport MakePost from './components/MakePost/MakePost';\n\nconst POST_STATE = 'POST_STATE';\nconst USER_STATE = 'USER_STATE';\n\n// Load state\nexport const loadState = () => {\n\ttry {\n\t\tconst serializedState = localStorage.getItem(USER_STATE);\n\t\tif (serializedState === null) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn JSON.parse(serializedState);\n\t} catch (err) {\n\t\treturn undefined;\n\t}\n};\n\n// Save state\nexport const saveState = (state) => {\n\ttry {\n\t\tconst serializedState = JSON.stringify(state);\n\t\tlocalStorage.setItem(USER_STATE, serializedState);\n\t} catch (err) {\n\t\tconsole.log('Error saving data:' + err);\n\t}\n};\n\n// Load default state, create redux store, save state to redux store\nconst persistedState = loadState();\nconst store = createStore(reducers, persistedState);\nstore.subscribe(() => {\n\tsaveState(store.getState());\n});\n\nfunction App() {\n\treturn (\n\t\t<Provider store={store}>\n\t\t\t<div className=\"App\">\n\t\t\t\t<Route component={NavigationBar} />\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path=\"/\" component={Landing} />\n\t\t\t\t\t<Route path=\"/prof\" component={UserProfile} />\n\t\t\t\t\t<Route path=\"/posts\" component={Posts} />\n\t\t\t\t\t{/* <Route path=\"/createPost\" component={createPost} /> */}\n\t\t\t\t\t<Route path=\"/createPost\" component={MakePost} />\n\t\t\t\t\t<Route path=\"/register\" component={Register} />\n\t\t\t\t\t{/* <Route path=\"/login\" component={Login} /> */}\n\t\t\t\t\t<Route path=\"/skill\" component={Skills} />\n\t\t\t\t</Switch>\n\t\t\t\t<Footer />\n\t\t\t</div>\n\t\t</Provider>\n\t);\n}\n\nexport { store };\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.0/8 are considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n      headers: { 'Service-Worker': 'script' }\n    })\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready\n        .then(registration => {\n          registration.unregister();\n        })\n        .catch(error => {\n          console.error(error.message);\n        });\n    }\n  }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport './index.css';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorker from \"./serviceWorker\";\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\nserviceWorker.unregister();\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}